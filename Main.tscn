[gd_scene load_steps=11 format=2]

[ext_resource path="res://Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://addons/godot-rollback-netcode/log_inspector/monogram_extended.ttf" type="DynamicFontData" id=3]
[ext_resource path="res://Obstacle.tscn" type="PackedScene" id=4]
[ext_resource path="res://Point.tscn" type="PackedScene" id=5]

[sub_resource type="GDScript" id=5]
script/source = "extends SGFixedNode2D

# Declaração de elementos da engine para acessar depois
onready var connection_panel = $ConnectionCanvas/ConnectionPanel 
onready var host_field = $ConnectionCanvas/ConnectionPanel/GridContainer/HostField
onready var port_field = $ConnectionCanvas/ConnectionPanel/GridContainer/PortField
onready var message_label = $ConnectionCanvas/MessageLabel
onready var sync_lost_label = $ConnectionCanvas/SyncLostLabel
onready var fps_counter = $Background/FpsCounter

onready var P1Label = $Background/P1Label
onready var P2Label = $Background/P2Label

const Ball = preload(\"res://Ball.tscn\")

const LOG_FILE_DIRECTORY = 'res://logs/'

export var logging_enabled := false
export var fps_enabled := true

#Função que é executada por padrão assim que a cena é carregada
func _ready() -> void:
	
	if (fps_enabled):
		fps_counter.show()
		
	\"\"\" 
		Esses são 3 sinais padrões da ENet que indicam 
		quando um peer for conectado ou desconectado ou o servidor fechado
		Quando um desses sinais acontece uma função callback desse script é chamada
	\"\"\"
	get_tree().connect(\"network_peer_connected\", self, \"_on_network_peer_connected\")
	get_tree().connect(\"network_peer_disconnected\", self, \"_on_network_peer_disconnected\")
	get_tree().connect(\"server_disconnected\", self, \"_on_server_disconnected\")
	
	
	\"\"\"
		Esses são 4 sinais padrões do SyncManager
		Chamarão funções callback dentro da função
	\"\"\"
	SyncManager.connect(\"sync_started\", self, \"_on_SyncManager_sync_started\")
	SyncManager.connect(\"sync_stopped\", self, \"_on_SyncManager_sync_stopped\")
	SyncManager.connect(\"sync_lost\", self, \"_on_SyncManager_sync_lost\")
	SyncManager.connect(\"sync_regained\", self, \"_on_SyncManager_sync_regained\")
	SyncManager.connect(\"sync_error\", self, \"_on_SyncManager_sync_error\")

# Função callbakc quando o botão \"Iniciar como Servidor\" for clicado
func _on_ServerButton_pressed() -> void:
	
	# Cria um \"servidor\" dentro da camada de multiplayer do godot (ENet)
	var peer = NetworkedMultiplayerENet.new()
	peer.create_server(int(port_field.text), 1)
	get_tree().network_peer = peer
	
	#Deixa o painel de conexão invisível e mostra uma mensagem
	connection_panel.visible = false
	message_label.text = \"Listening...\" #TODO: Alterar mensagem

# Função callback quando o botão \"Iniciar como Cliente\" for clicado
func _on_ClientButton_pressed() -> void:
	
	#Cria um \"cliente\" dentro da camada de multiplayer do godot (Enet)
	var peer = NetworkedMultiplayerENet.new()
	peer.create_client(host_field.text, int(port_field.text))
	get_tree().network_peer = peer
	
	#Deixa o painel de conexão invisível e mostra uma mensagem
	connection_panel.visible = false
	message_label.text = \"Connecting...\" #TODO: Alterar mensagem

# Função callback para quando um peer for conectado do Enet
func _on_network_peer_connected(peer_id: int):
	
	# Adiciona o peer ao SyncManager
	message_label.text = \"Connected!\"
	SyncManager.add_peer(peer_id)
	
	\"\"\"
		O \"servidor\" não é responsável por nada da gameplay,
		porém a Enet requer que um dos nós seja um servidor
	\"\"\"
	
	#Diz de qual peer é cada player
	#Um jogador sempre será o \"servidor\" que recebe o id 1
	$ServerPlayer.set_network_master(1)
	if get_tree().is_network_server():
		# Já o outro jogador checa se ele mesmo é o \"servidor\"
		# Caso positivo ele atribui para o cliente o peer_id obtido dele
		$ClientPlayer.set_network_master(peer_id)
	else:
		# Caso contrário, ele é o cliente então ele gera um id unico
		$ClientPlayer.set_network_master(get_tree().get_network_unique_id())
	
	if get_tree().is_network_server(): #Se for um \"Servidor\"
		message_label.text = \"Starting...\" #Mensagem
		# Timeout de 2 segundos (para obter dados de ping)
		yield(get_tree().create_timer(2.0), \"timeout\")
		SyncManager.start() #Inicia o SyncManager

#Função callback quando um peer desconecta do Enet
func _on_network_peer_disconnected(peer_id: int):
	# Remove o peer do SyncManager
	message_label.text = \"Disconnected\"
	SyncManager.remove_peer(peer_id) 

func _on_server_disconnected() -> void:
	#Chama a função para desconectar um peer passando um id 1
	#Um \"servidor\" Enet sempre terá o id 1
	_on_network_peer_disconnected(1)

#Callback para quando o botão \"RESET\" for apertado
func _on_ResetButton_pressed() -> void:
	# Para o SyncManager (e a partida) 
	# Remove remove todos os peers (isso deve ser feito no fim da sessao)
	SyncManager.stop()
	SyncManager.clear_peers()
	
	#Remove os peers e conexões do Enet
	var peer = get_tree().network_peer
	if peer:
		peer.close_connection()
	
	#Recarrega a cena
	get_tree().reload_current_scene()

#Função callback para quando o SyncManager iniciar
func _on_SyncManager_sync_started() -> void:
	message_label.text = \"Started!\"
	SyncManager.spawn(\"Ball\", self, Ball, { position = get_viewport_rect().size / 2})
	
	if logging_enabled:
		var dir = Directory.new()
		if not dir.dir_exists(LOG_FILE_DIRECTORY):
			dir.make_dir(LOG_FILE_DIRECTORY)
		
		var datetime = OS.get_datetime(true)
		var log_file_name = \"%04d%02d%02d-%02d%02d%02d-peer-%d.log\" % [
			datetime['year'],
			datetime['month'],
			datetime['day'],
			datetime['hour'],
			datetime['minute'],
			datetime['second'],
			SyncManager.network_adaptor.get_network_unique_id(),
		]
		
		SyncManager.start_logging(LOG_FILE_DIRECTORY + '/' + log_file_name)
		
#Função callback para quando o SyncManager parar
func _on_SyncManager_sync_stopped() -> void:
	if logging_enabled:
		SyncManager.stop_logging()

#Função callback para quando o SyncManager perder a sincronização
func _on_SyncManager_sync_lost() -> void:
	sync_lost_label.visible = true

#Função callback para quando o SyncManager recuperar a sincronização
func _on_SyncManager_sync_regained() -> void:
	sync_lost_label.visible = false

#Função callback para quando o SyncManager gerar erros
func _on_SyncManager_sync_error(msg: String) -> void:
	
	#Imprime o erro na tela
	message_label.text = \"Fatal sync error: \" + msg
	sync_lost_label.visible = false
	
	#Fecha toda a conexão e remove os peers
	var peer = get_tree().network_peer
	if peer:
		peer.close_connection()
	SyncManager.clear_peers()
	
func _process(_delta):
	if (fps_enabled):
		fps_counter.text = str(\"FPS: \", Engine.get_frames_per_second())

"

[sub_resource type="StyleBoxFlat" id=6]
bg_color = Color( 0, 0, 0, 1 )

[sub_resource type="DynamicFontData" id=3]
font_path = "res://PTSans-Regular.ttf"

[sub_resource type="DynamicFont" id=4]
size = 22
outline_color = Color( 1, 0, 0, 1 )
font_data = SubResource( 3 )

[sub_resource type="DynamicFont" id=2]
size = 150
font_data = ExtResource( 3 )

[sub_resource type="DynamicFont" id=7]
size = 22
font_data = ExtResource( 3 )

[node name="Main" type="SGFixedNode2D"]
script = SubResource( 5 )

[node name="Background" type="Panel" parent="."]
margin_left = -108.0
margin_top = -69.0
margin_right = 1371.0
margin_bottom = 783.0
custom_styles/panel = SubResource( 6 )

[node name="FpsCounter" type="Label" parent="Background"]
visible = false
anchor_left = 1.0
anchor_right = 1.0
margin_left = -191.0
margin_top = 87.0
margin_right = -100.0
margin_bottom = 117.0
custom_fonts/font = SubResource( 4 )
text = "FPS: ---"

[node name="Divisory" type="ColorRect" parent="Background"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -4.0
margin_top = -422.0
margin_right = 4.0
margin_bottom = 422.0

[node name="P1Label" type="Label" parent="Background"]
anchor_right = 1.0
margin_left = 619.0
margin_top = 72.0
margin_right = -745.0
margin_bottom = 228.0
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/line_spacing = 1
custom_constants/shadow_offset_y = 1
custom_constants/shadow_as_outline = 1
custom_fonts/font = SubResource( 2 )
text = "0"
align = 2
valign = 1
__meta__ = {
"_editor_description_": ""
}

[node name="P2Label" type="Label" parent="Background"]
anchor_right = 1.0
margin_left = 756.0
margin_top = 72.0
margin_right = -608.0
margin_bottom = 228.0
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/shadow_offset_x = 1
custom_constants/line_spacing = 1
custom_constants/shadow_offset_y = 1
custom_constants/shadow_as_outline = 1
custom_fonts/font = SubResource( 2 )
text = "0"
valign = 1

[node name="ConnectionCanvas" type="CanvasLayer" parent="."]

[node name="ConnectionPanel" type="PanelContainer" parent="ConnectionCanvas"]
anchor_left = 0.5
anchor_top = 0.474
anchor_right = 0.5
anchor_bottom = 0.474
margin_left = -304.0
margin_top = -67.28
margin_right = 90.0
margin_bottom = 22.72
rect_scale = Vector2( 1.5, 1.5 )

[node name="GridContainer" type="GridContainer" parent="ConnectionCanvas/ConnectionPanel"]
margin_left = 7.0
margin_top = 7.0
margin_right = 387.0
margin_bottom = 83.0
size_flags_horizontal = 3
columns = 2

[node name="HostLabel" type="Label" parent="ConnectionCanvas/ConnectionPanel/GridContainer"]
margin_top = 5.0
margin_right = 188.0
margin_bottom = 19.0
size_flags_horizontal = 3
text = "Host:"

[node name="HostField" type="LineEdit" parent="ConnectionCanvas/ConnectionPanel/GridContainer"]
margin_left = 192.0
margin_right = 380.0
margin_bottom = 24.0
size_flags_horizontal = 3
text = "127.0.0.1"
caret_blink = true
caret_blink_speed = 0.5

[node name="PortLabel" type="Label" parent="ConnectionCanvas/ConnectionPanel/GridContainer"]
margin_top = 33.0
margin_right = 188.0
margin_bottom = 47.0
text = "Porta:"

[node name="PortField" type="LineEdit" parent="ConnectionCanvas/ConnectionPanel/GridContainer"]
margin_left = 192.0
margin_top = 28.0
margin_right = 380.0
margin_bottom = 52.0
text = "9000"
caret_blink = true
caret_blink_speed = 0.5

[node name="ServerButton" type="Button" parent="ConnectionCanvas/ConnectionPanel/GridContainer"]
margin_top = 56.0
margin_right = 188.0
margin_bottom = 76.0
text = "Iniciar como Servidor"

[node name="ClientButton" type="Button" parent="ConnectionCanvas/ConnectionPanel/GridContainer"]
margin_left = 192.0
margin_top = 56.0
margin_right = 380.0
margin_bottom = 76.0
text = "iniciar como Cliente"

[node name="MessageLabel" type="Label" parent="ConnectionCanvas"]
margin_left = 37.0
margin_top = 641.0
margin_right = 267.0
margin_bottom = 692.0
custom_fonts/font = SubResource( 7 )

[node name="ResetButton" type="Button" parent="ConnectionCanvas"]
visible = false
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -86.0
margin_top = -41.0
margin_right = -38.0
margin_bottom = -21.0
rect_scale = Vector2( 1.5, 1.5 )
text = "RESET"

[node name="SyncLostLabel" type="Label" parent="ConnectionCanvas"]
visible = false
anchor_left = 1.0
anchor_right = 1.0
margin_left = -140.0
margin_top = 82.0
margin_right = -18.0
margin_bottom = 113.0
text = "SYNC LOST
REGAINING SYNC..."
align = 1

[node name="ServerPlayer" parent="." instance=ExtResource( 2 )]
position = Vector2( 28, 360 )
scale = Vector2( 1, 2.29999 )
fixed_position_x = 1835008
fixed_position_y = 23592960
fixed_scale_y = 150732

[node name="ClientPlayer" parent="." instance=ExtResource( 2 )]
position = Vector2( 1274, 360 )
scale = Vector2( 1, 2.29999 )
fixed_position_x = 83492864
fixed_position_y = 23592960
fixed_scale_y = 150732

[node name="UpperObstacle" parent="." instance=ExtResource( 4 )]
position = Vector2( 640, 1 )
fixed_position_x = 41943040
fixed_position_y = 65536

[node name="LowerObstacle" parent="." instance=ExtResource( 4 )]
position = Vector2( 640, 721 )
fixed_position_x = 41943040
fixed_position_y = 47251456

[node name="P2Point" parent="." instance=ExtResource( 5 )]
position = Vector2( 6, 360 )
fixed_position_x = 393216
fixed_position_y = 23592960

[node name="P1Point" parent="." instance=ExtResource( 5 )]
position = Vector2( 1275, 360 )
fixed_position_x = 83558400
fixed_position_y = 23592960

[connection signal="pressed" from="ConnectionCanvas/ConnectionPanel/GridContainer/ServerButton" to="." method="_on_ServerButton_pressed"]
[connection signal="pressed" from="ConnectionCanvas/ConnectionPanel/GridContainer/ClientButton" to="." method="_on_ClientButton_pressed"]
[connection signal="pressed" from="ConnectionCanvas/ResetButton" to="." method="_on_ResetButton_pressed"]
